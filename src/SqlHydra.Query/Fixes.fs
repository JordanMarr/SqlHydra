/// Contains query fixes for bugs in SqlKata generated queries.
module SqlHydra.Query.Fixes

open System

module Oracle = 

    /// Fixes broken SqlKata query for Oracle multiple inserts.
    let fixMultiInsertQuery (cmdText: string) = 
        let columnsStr, parameterStr = 
            match cmdText.Replace("INSERT INTO ", "").Split([| " VALUES " |], StringSplitOptions.RemoveEmptyEntries) with
            | [| columns; values |] -> columns, values
            | _ -> failwith "Invalid query"

        let entityLines = 
            parameterStr.Split([| "), (" |], StringSplitOptions.RemoveEmptyEntries)
            |> Array.map (fun p -> p.Replace("(", "").Replace(")", ""))
            |> Array.map (fun p -> $"INTO {columnsStr} VALUES ({p})")

        let sb = Text.StringBuilder()
        sb.AppendLine("INSERT ALL") |> ignore
        
        for line in entityLines do
            sb.AppendLine(line) |> ignore

        sb.AppendLine("SELECT * FROM DUAL") |> ignore

        sb.ToString()

    /// Adds an identity query to an Oracle insert query.
    let fixIdentityQuery (identityColumnName: string) (cmdText: string) = 
        $"{cmdText} returning \"{identityColumnName}\" into :outputParam"

module Postgres = 
    
    /// Fixes the Postgres identity query generated by SqlKata.
    let fixIdentityQuery (identityColumnName: string) (cmdText: string) = 
        cmdText.Replace(";SELECT lastval() AS id", $" RETURNING \"{identityColumnName}\";")

module MsSql = 
    
    /// Fixes `getId` for guid/uniqueidentifier columns that need to use `OUTPUT` clause instead of `SELECT scope_identity()`
    let fixGuidIdentityQuery (identityColumnName: string) (cmdText: string) = 
        
        // Example mssql insert query with identity query appended to end:
        // "INSERT INTO [dbo].[Customer] ([PersonID], [StoreID]) VALUES (@p0, @p1);SELECT scope_identity() as Id" 

        // Remove identity query
        let query = 
            match cmdText.Split([| ";SELECT scope_identity" |], StringSplitOptions.RemoveEmptyEntries) with
            | [| left; _ |] -> left
            | _ -> failwith "Expected `scope_identity` keyword."

        // Insert `OUTPUT` clause (needed for guid identities)
        match query.Split([| " VALUES " |], StringSplitOptions.RemoveEmptyEntries) with
        | [| insertInto; values |] -> $"{insertInto} OUTPUT INSERTED.{identityColumnName} VALUES {values}"
        | _ -> failwith "Expected ` VALUES ` keyword."
