<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>netstandard2.0;net5.0;net6.0;net7.0</TargetFrameworks>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<WarnOn>3390;$(WarnOn)</WarnOn>
		<Version>1.2.0</Version>
		<Description>SqlHydra.Query is an F# query builder powered by SqlKata.Query that supports SQL Server, PostgreSQL and Sqlite.</Description>
		<WarningsAsErrors>
			<!-- Incomplete pattern matches on this expression. -->
			FS0025
		</WarningsAsErrors>
		<Authors>Jordan Marr</Authors>
		<PackageTags>F# fsharp data database orm sql</PackageTags>
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
		<PackageReleaseNotes></PackageReleaseNotes>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\..\LICENSE">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
		<Compile Include="Kata.fs" />
		<Compile Include="QueryFunctions.fs" />
		<Compile Include="QuotationVisitor.fs" />
		<Compile Include="LinqExpressionVisitors.fs" />
		<Compile Include="Fixes.fs" />
		<Compile Include="OnConflict.fs" />
		<Compile Include="QueryContext.fs" />
		<Compile Include="SelectBuilders.fs" />
		<Compile Include="InsertBuilders.fs" />
		<Compile Include="UpdateBuilders.fs" />
		<Compile Include="DeleteBuilders.fs" />
		<Compile Include="NpgsqlExtensions.fs" />
		<Compile Include="SqliteExtensions.fs" />
		<Compile Include="DataReaderExtensions.fs" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="SqlKata" Version="2.4.0" />
		<PackageReference Update="FSharp.Core" Version="5.0.2" />
	</ItemGroup>

	<ItemGroup>
		<!-- Marked with PrivateAssets="All" to include project reference in NuGet package -->
		<ProjectReference Include="..\SqlHydra.Domain\SqlHydra.Domain.fsproj" PrivateAssets="All" />
	</ItemGroup>

	<Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
		<ItemGroup>
			<!-- Filter out unnecessary files -->
			<_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
		</ItemGroup>

		<!-- Print batches for debug purposes -->
		<Message Text="Batch for .nupkg: ReferenceCopyLocalPaths = @(_ReferenceCopyLocalPaths), ReferenceCopyLocalPaths.DestinationSubDirectory = %(_ReferenceCopyLocalPaths.DestinationSubDirectory) Filename = %(_ReferenceCopyLocalPaths.Filename) Extension = %(_ReferenceCopyLocalPaths.Extension)" Importance="High" Condition="'@(_ReferenceCopyLocalPaths)' != ''" />

		<ItemGroup>
			<!-- Add file to package with consideration of sub folder. If empty, the root folder is chosen. -->
			<BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
		</ItemGroup>
	</Target>

</Project>
